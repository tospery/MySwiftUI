//
//  UI01ColorSystemScreen.swift
//  MySwiftUI
//
//  Created by 杨建祥 on 2024/11/24.
//

import SwiftUI
import SwifterSwift

struct UI01ColorSystemScreen: View {
    
    // @State private var isDarkMode = false
    @AppStorage("isDarkMode") private var isDarkMode = false
    
    var body: some View {
        List {
            Text("Color.accentColor")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color.accentColor)
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("Color.primary")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color.primary)
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("Color.secondary")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color.secondary)
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.tintColor-\(UIColor.tintColor.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .tintColor))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.label-\(UIColor.label.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .label))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.secondaryLabel-\(UIColor.secondaryLabel.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .secondaryLabel))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.tertiaryLabel-\(UIColor.tertiaryLabel.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .tertiaryLabel))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.quaternaryLabel-\(UIColor.quaternaryLabel.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .quaternaryLabel))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.placeholderText-\(UIColor.placeholderText.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .placeholderText))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.separator-\(UIColor.separator.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .separator))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.opaqueSeparator-\(UIColor.opaqueSeparator.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .opaqueSeparator))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
            Text("UIColor.systemBackground-\(UIColor.systemBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .systemBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.secondarySystemBackground-\(UIColor.secondarySystemBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .secondarySystemBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.tertiarySystemBackground-\(UIColor.tertiarySystemBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .tertiarySystemBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.systemGroupedBackground-\(UIColor.systemGroupedBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .systemGroupedBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.secondarySystemGroupedBackground-\(UIColor.secondarySystemGroupedBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .secondarySystemGroupedBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.tertiarySystemGroupedBackground-\(UIColor.tertiarySystemGroupedBackground.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .tertiarySystemGroupedBackground))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.systemFill-\(UIColor.systemFill.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .systemFill))
                .foregroundStyle(Color.black)
            Text("UIColor.secondarySystemFill-\(UIColor.secondarySystemFill.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .secondarySystemFill))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.tertiarySystemFill-\(UIColor.tertiarySystemFill.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .tertiarySystemFill))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.quaternarySystemFill-\(UIColor.quaternarySystemFill.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .quaternarySystemFill))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.lightText-\(UIColor.lightText.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .lightText))
                .foregroundStyle(isDarkMode ? Color.white : Color.black)
            Text("UIColor.darkText-\(UIColor.darkText.hexString)")
                .frame(height: 40)
                .frame(maxWidth: .infinity)
                .background(Color(uiColor: .label))
                .foregroundStyle(isDarkMode ? Color.black : Color.white)
        }
        .environment(\.defaultMinListRowHeight, 0)
        .listStyle(.plain)
        .scrollContentBackground(.hidden)
        .navigationTitle("系统内置的颜色")
        .preferredColorScheme(isDarkMode ? .dark : .light)
        .toolbar {
            ToolbarItem(placement: .navigationBarTrailing) {
                Button(action: {
                    isDarkMode = !isDarkMode
                }) {
                    Image(systemName: "lightbulb.fill")
                }
            }
        }
    }
}
